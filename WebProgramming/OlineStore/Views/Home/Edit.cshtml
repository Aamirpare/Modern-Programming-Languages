@model OnlineStore.Models.Student

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<style>
    .student-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .student {
        width: 40%;
    }
    .courses {
        width: 60%;
    }
    @@media(max-width: 600px) {
        .student-container {
            display:block;
        }
        .btn{
            width:100px;
            margin-bottom:10px;
        }
        .student {
            width: 100%;
        }

        .courses {
            width: 100%;
        }
    }
</style>
<h4>Student</h4>
<hr />
@using (Html.BeginForm("Edit", "Home", FormMethod.Post))
{
    <div class="student-container">
        <div class="form-horizontal student">
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.StudentId)

            <div class="form-group">
                <img class="rounded profile-pic" src="~/Content/Images/student-@(Model.StudentId).jpg"
                     alt="@Model.FullName" title="@(Model.StudentId + "-" + Model.FullName)" />
                <div>
                    @Html.DisplayFor(m => m.FullName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary mt-2">
                    <i class="fa fa-database"></i> Save
                </button> &nbsp;
                <a href="/students" class="btn btn-success mt-2">
                    <i class="fa fa-spinner fa-spin"></i>Cancel
                </a>
            </div>
        </div>
        <div class="courses">
           @Html.Partial("_course", Model)
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
